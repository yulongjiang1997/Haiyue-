// <auto-generated />
using System;
using Haiyue.HYEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Haiyue.HYEF.Migrations
{
    [DbContext(typeof(HYContext))]
    [Migration("20190101103844_Updatetable1")]
    partial class Updatetable1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Haiyue.Model.Model.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<double>("ExchangeRate");

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<string>("Name");

                    b.Property<string>("Symbol");

                    b.HasKey("Id");

                    b.ToTable("Currencys");
                });

            modelBuilder.Entity("Haiyue.Model.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Haiyue.Model.Model.Expenditure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<DateTime>("ExpenditureTime");

                    b.Property<int>("ExpenditureTypeId");

                    b.Property<int>("HandlerId");

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<string>("Remarks");

                    b.HasKey("Id");

                    b.HasIndex("ExpenditureTypeId");

                    b.HasIndex("HandlerId");

                    b.ToTable("Expenditures");
                });

            modelBuilder.Entity("Haiyue.Model.Model.ExpenditureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ExpenditureTypes");
                });

            modelBuilder.Entity("Haiyue.Model.Model.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Haiyue.Model.Model.LeaveAMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<string>("Title");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("LeaveAMessages");
                });

            modelBuilder.Entity("Haiyue.Model.Model.LeaveAMessageReply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<int>("LeaveAMessageId");

                    b.Property<int>("ReplyUserId");

                    b.HasKey("Id");

                    b.HasIndex("LeaveAMessageId");

                    b.HasIndex("ReplyUserId");

                    b.ToTable("LeaveAMessageReplys");
                });

            modelBuilder.Entity("Haiyue.Model.Model.LoginInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<DateTime>("OutTime");

                    b.Property<string>("Token");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LoginInfos");
                });

            modelBuilder.Entity("Haiyue.Model.Model.NoteBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BgColor");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<string>("Title");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("NoteBooks");
                });

            modelBuilder.Entity("Haiyue.Model.Model.OtherOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ActualPayment");

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<int>("HandlerId");

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<string>("OrderNumber");

                    b.Property<DateTime>("OrderTime");

                    b.Property<int>("PaymentStatus");

                    b.Property<string>("Remark");

                    b.Property<string>("ServiceName");

                    b.Property<string>("TotalExpenditure");

                    b.HasKey("Id");

                    b.HasIndex("HandlerId");

                    b.ToTable("OtherOrders");
                });

            modelBuilder.Entity("Haiyue.Model.Model.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<int>("DepartmentId");

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Haiyue.Model.Model.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<int>("CurrencyId");

                    b.Property<int>("GameId");

                    b.Property<int>("HandlerId");

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<int>("Number");

                    b.Property<DateTime>("OrderDate");

                    b.Property<string>("OrderNumber");

                    b.Property<string>("PaymentAccount");

                    b.Property<int>("PaymentStatus");

                    b.Property<double>("RealIncome");

                    b.Property<double>("RealIncomeRMB");

                    b.Property<string>("Remarks");

                    b.Property<string>("ServerName");

                    b.Property<string>("SupplierPhone");

                    b.Property<int>("TotalNumber");

                    b.Property<double>("TotalPrice");

                    b.Property<double>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("GameId");

                    b.HasIndex("HandlerId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("Haiyue.Model.Model.Refund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ActualPayment");

                    b.Property<double>("ActualRefund");

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<string>("GmaeOrGiftCard");

                    b.Property<int>("HandlerId");

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<string>("OrderNumber");

                    b.Property<string>("Product");

                    b.Property<double>("RefundAmount");

                    b.Property<int>("RefundStatus");

                    b.Property<DateTime>("RefundTime");

                    b.Property<string>("Remark");

                    b.Property<string>("ServiceName");

                    b.HasKey("Id");

                    b.HasIndex("HandlerId");

                    b.ToTable("Refunds");
                });

            modelBuilder.Entity("Haiyue.Model.Model.TaskChangeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginTime");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<int>("OperatorId");

                    b.Property<int>("TaskId");

                    b.HasKey("Id");

                    b.HasIndex("OperatorId");

                    b.ToTable("TaskChangeLogss");
                });

            modelBuilder.Entity("Haiyue.Model.Model.TaskList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssignId");

                    b.Property<DateTime>("BeginTime");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<int>("PublisherId");

                    b.Property<int>("TaskStatus");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("TaskLists");
                });

            modelBuilder.Entity("Haiyue.Model.Model.TaskStatusLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChangeStatus");

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<int>("CurrentStatus");

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<int>("TaskId");

                    b.HasKey("Id");

                    b.ToTable("TaskStatusLogss");
                });

            modelBuilder.Entity("Haiyue.Model.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasMaxLength(30);

                    b.Property<int>("Education");

                    b.Property<DateTime>("EntryTime");

                    b.Property<string>("IdNumber");

                    b.Property<int>("IncumbencyStatus");

                    b.Property<string>("JobNumber");

                    b.Property<int>("Jurisdiction");

                    b.Property<DateTime?>("LastUpTime")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("LoginTime");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<int>("PositionId");

                    b.Property<string>("RegisteredResidence");

                    b.Property<string>("Remarks");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Haiyue.Model.Model.Expenditure", b =>
                {
                    b.HasOne("Haiyue.Model.Model.ExpenditureType", "ExpenditureType")
                        .WithMany("Expenditures")
                        .HasForeignKey("ExpenditureTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Haiyue.Model.Model.User", "User")
                        .WithMany("Expenditures")
                        .HasForeignKey("HandlerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Haiyue.Model.Model.LeaveAMessageReply", b =>
                {
                    b.HasOne("Haiyue.Model.Model.LeaveAMessage", "LeaveAMessage")
                        .WithMany("LeaveAMessageReply")
                        .HasForeignKey("LeaveAMessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Haiyue.Model.Model.User", "ReplyUser")
                        .WithMany("LeaveAMessageReplys")
                        .HasForeignKey("ReplyUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Haiyue.Model.Model.LoginInfo", b =>
                {
                    b.HasOne("Haiyue.Model.Model.User", "User")
                        .WithMany("LoginInfos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Haiyue.Model.Model.NoteBook", b =>
                {
                    b.HasOne("Haiyue.Model.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Haiyue.Model.Model.OtherOrder", b =>
                {
                    b.HasOne("Haiyue.Model.Model.User", "Handler")
                        .WithMany()
                        .HasForeignKey("HandlerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Haiyue.Model.Model.Position", b =>
                {
                    b.HasOne("Haiyue.Model.Model.Department", "Department")
                        .WithMany("Positions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Haiyue.Model.Model.Purchase", b =>
                {
                    b.HasOne("Haiyue.Model.Model.Currency", "Currency")
                        .WithMany("Purchase")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Haiyue.Model.Model.Game", "Game")
                        .WithMany("Purchase")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Haiyue.Model.Model.User", "Handler")
                        .WithMany()
                        .HasForeignKey("HandlerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Haiyue.Model.Model.Refund", b =>
                {
                    b.HasOne("Haiyue.Model.Model.User", "Handler")
                        .WithMany()
                        .HasForeignKey("HandlerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Haiyue.Model.Model.TaskChangeLog", b =>
                {
                    b.HasOne("Haiyue.Model.Model.User", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Haiyue.Model.Model.User", b =>
                {
                    b.HasOne("Haiyue.Model.Model.Position", "Position")
                        .WithMany("User")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
